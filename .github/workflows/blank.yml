name: Download from Private Repos

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version tag'
        required: true
        default: 'v2.4.1'

jobs:
  download:
    runs-on: windows-latest
    steps:
    - name: Download from zs repository
      shell: pwsh
      run: |
        $version = "${{ github.event.inputs.version }}"
        $token = "${{ secrets.PAT_TOKEN }}"
        $headers = @{
          "Authorization" = "Bearer $token"
          "Accept" = "application/vnd.github.v3+json"
        }

        Write-Host "Fetching release info for zs ${version}..."
        try {
          $zsRelease = Invoke-RestMethod -Uri "https://api.github.com/repos/onodera2007/zs/releases/tags/$version" -Headers $headers
        } catch {
          Write-Error "Failed to fetch zs release info. Check if the tag exists and PAT_TOKEN has access."
          exit 1
        }

        Write-Host "Available files in zs ${version}:"
        $zsRelease.assets | ForEach-Object { Write-Host (" - {0}" -f $_.name) }

        foreach ($asset in $zsRelease.assets) {
          $downloadUrl = "https://api.github.com/repos/onodera2007/zs/releases/assets/$($asset.id)"
          Write-Host "Downloading $($asset.name)..."
          Invoke-WebRequest -Uri $downloadUrl -OutFile $asset.name -Headers @{
            "Authorization" = "Bearer $token"
            "Accept" = "application/octet-stream"
          }
        }

    - name: Download from lancher repository
      shell: pwsh
      run: |
        $version = "${{ github.event.inputs.version }}"
        $token = "${{ secrets.PAT_TOKEN }}"
        $headers = @{
          "Authorization" = "Bearer $token"
          "Accept" = "application/vnd.github.v3+json"
        }

        Write-Host "Fetching release info for lancher ${version}..."
        try {
          $lancherRelease = Invoke-RestMethod -Uri "https://api.github.com/repos/onodera2007/lancher/releases/tags/$version" -Headers $headers
        } catch {
          Write-Error "Failed to fetch lancher release info. Check if the tag exists and PAT_TOKEN has access."
          exit 1
        }

        Write-Host "Available files in lancher ${version}:"
        $lancherRelease.assets | ForEach-Object { Write-Host (" - {0}" -f $_.name) }

        foreach ($asset in $lancherRelease.assets) {
          $downloadUrl = "https://api.github.com/repos/onodera2007/lancher/releases/assets/$($asset.id)"
          Write-Host "Downloading $($asset.name)..."
          Invoke-WebRequest -Uri $downloadUrl -OutFile $asset.name -Headers @{
            "Authorization" = "Bearer $token"
            "Accept" = "application/octet-stream"
          }
        }

    - name: List all downloaded files
      shell: pwsh
      run: Get-ChildItem

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        overwrite: true
        tag_name: ${{ github.event.inputs.version }}
        generate_release_notes: true
        files: |
          ./*.exe
          ./*.dll
      env:
        GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
